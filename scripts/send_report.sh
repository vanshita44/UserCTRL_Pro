#!/bin/bash

# send_report.sh - Script to send audit reports via email
# This script is designed to work with the UserCTRL Pro GUI

# Set up logging
LOG_DIR="../logs"
mkdir -p "$LOG_DIR"
LOG_FILE="$LOG_DIR/audit_$(date +%Y%m%d).log"

# Function to log messages
log_message() {
    echo "$(date +"%Y-%m-%d %H:%M:%S") - $1" >> "$LOG_FILE"
}

log_message "Starting send_report.sh script"

# Default values
SUBJECT="System Audit Report"

# Parse command line arguments
while getopts "s:" opt; do
    case $opt in
        s)
            SUBJECT="$OPTARG"
            ;;
        \?)
            echo "Invalid option: -$OPTARG"
            exit 1
            ;;
    esac
done

# Shift to get the positional parameters
shift $((OPTIND - 1))

# Check if email and report file are provided
if [ $# -lt 2 ]; then
    echo "Error: Email address and report file are required"
    log_message "Error: Email address and report file are required"
    exit 1
fi

EMAIL="$1"
REPORT_FILE="$2"

# Validate inputs
if [ -z "$EMAIL" ]; then
    echo "Error: Email address is required"
    log_message "Error: Email address is required"
    exit 1
fi

if [ -z "$REPORT_FILE" ] || [ ! -f "$REPORT_FILE" ]; then
    echo "Error: Report file $REPORT_FILE does not exist"
    log_message "Error: Report file $REPORT_FILE does not exist"
    exit 1
fi

# Check if mail command is available
if ! command -v mail &> /dev/null; then
    echo "Error: 'mail' command not found. Please install mailutils package."
    log_message "Error: 'mail' command not found"
    exit 1
fi

# Send the email
echo "Sending report to $EMAIL..."
log_message "Sending report $REPORT_FILE to $EMAIL"

# Create a temporary email body file
TEMP_EMAIL_BODY=$(mktemp)

cat > "$TEMP_EMAIL_BODY" << EOF
Hello,

Please find attached the system audit report generated on $(date +"%Y-%m-%d %H:%M:%S").

This report was automatically generated by UserCTRL Pro.

Regards,
System Administrator
EOF

# Send the email
mail -s "$SUBJECT" -a "$REPORT_FILE" "$EMAIL" < "$TEMP_EMAIL_BODY"

# Check if email was sent successfully
if [ $? -eq 0 ]; then
    echo "SUCCESS: Report sent to $EMAIL"
    log_message "SUCCESS: Report $REPORT_FILE sent to $EMAIL"
else
    echo "ERROR: Failed to send report to $EMAIL"
    log_message "ERROR: Failed to send report $REPORT_FILE to $EMAIL"
    rm "$TEMP_EMAIL_BODY"
    exit 1
fi

# Clean up
rm "$TEMP_EMAIL_BODY"

exit 0
